{"version":3,"sources":["Header.js","SwipeButtons.js","axios.js","TinderCards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","SwipeButtons","style","color","amber","red","blue","green","deepPurple","instance","axios","create","baseURL","TinderCards","useState","setLastDirection","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","direction","nameToDelete","name","onCardLeftScreen","backgroundImage","imgUrl","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA0BeA,MApBf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAGzC,qBACEA,UAAU,cACVG,IAAI,2EACJC,IAAI,gBAGN,cAACH,EAAA,EAAD,UACE,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,sB,qIC+B/BK,MAzCf,WACE,OACE,sBAAKL,UAAU,yBAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CACEC,SAAS,QACTF,UAAU,sBACVM,MAAO,CAAEC,MAAOC,IAAM,UAG1B,cAACP,EAAA,EAAD,UACE,cAAC,IAAD,CACED,UAAU,sBACVM,MAAO,CAAEC,MAAOE,IAAG,UAGvB,cAACR,EAAA,EAAD,UACE,cAAC,IAAD,CACEC,SAAS,QACTF,UAAU,sBACVM,MAAO,CAAEC,MAAOG,IAAK,UAGzB,cAACT,EAAA,EAAD,UACE,cAAC,IAAD,CACEC,SAAS,QACTF,UAAU,sBACVM,MAAO,CAAEC,MAAOI,IAAM,UAG1B,cAACV,EAAA,EAAD,UACE,cAAC,IAAD,CACEC,SAAS,QACTF,UAAU,sBACVM,MAAO,CAAEC,MAAOK,IAAW,c,kECtCtBC,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,0BCkDIC,MAhDf,WAAwB,IAAD,EACqBC,mBAAS,IAD9B,mBACCC,GADD,aAEOD,mBAAS,IAFhB,mBAEdE,EAFc,KAENC,EAFM,KAwBrB,OApBAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACoBT,EAAMU,IAAI,iBAD9B,OACQC,EADR,OAEEJ,EAAUI,EAAIC,MAFhB,4CADc,uBAAC,WAAD,wBAMdC,KACC,IAEHC,QAAQC,IAAIT,GAYV,qBAAKpB,UAAU,cAAf,SACE,qBAAKA,UAAU,4BAAf,SACGoB,EAAOU,KAAI,SAACC,GAAD,OACV,cAAC,IAAD,CACE/B,UAAU,QAEVgC,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAjBHC,EAiBmBD,EAjBRE,EAiBaL,EAAOM,KAhB7CT,QAAQC,IAAI,YAAcO,QAC1BjB,EAAiBgB,GAFJ,IAACA,EAAWC,GAkBjBE,iBAAkB,kBAbRD,EAayBN,EAAOM,UAZlDT,QAAQC,IAAIQ,EAAO,qBADF,IAACA,GAQZ,SAOE,qBACE/B,MAAO,CAAEiC,gBAAiB,OAASR,EAAOS,OAAS,KACnDxC,UAAU,OAFZ,SAIE,6BAAK+B,EAAOM,UATTN,EAAOM,cCnBTI,MAVf,WACE,OACE,sBAAKzC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c56647b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <IconButton>\r\n        <PersonIcon fontSize=\"large\" className=\"header-icon\" />\r\n      </IconButton>\r\n\r\n      <img\r\n        className=\"header-logo\"\r\n        src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo-500x281.png\"\r\n        alt=\"tinder-logo\"\r\n      />\r\n\r\n      <IconButton>\r\n        <ForumIcon fontSize=\"large\" className=\"header-icon\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SwipeButtons.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport { amber, red, green, blue, deepPurple } from \"@material-ui/core/colors\";\r\n\r\nfunction SwipeButtons() {\r\n  return (\r\n    <div className=\"swipebuttons-container\">\r\n      <IconButton>\r\n        <ReplayIcon\r\n          fontSize=\"large\"\r\n          className=\"swipebuttons-button\"\r\n          style={{ color: amber[300] }}\r\n        ></ReplayIcon>\r\n      </IconButton>\r\n      <IconButton>\r\n        <CloseIcon\r\n          className=\"swipebuttons-button\"\r\n          style={{ color: red[\"A400\"] }}\r\n        ></CloseIcon>\r\n      </IconButton>\r\n      <IconButton>\r\n        <StarIcon\r\n          fontSize=\"large\"\r\n          className=\"swipebuttons-button\"\r\n          style={{ color: blue[\"300\"] }}\r\n        ></StarIcon>\r\n      </IconButton>\r\n      <IconButton>\r\n        <FavoriteIcon\r\n          fontSize=\"large\"\r\n          className=\"swipebuttons-button\"\r\n          style={{ color: green[500] }}\r\n        ></FavoriteIcon>\r\n      </IconButton>\r\n      <IconButton>\r\n        <FlashOnIcon\r\n          fontSize=\"large\"\r\n          className=\"swipebuttons-button\"\r\n          style={{ color: deepPurple[500] }}\r\n        ></FlashOnIcon>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeButtons;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8001\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./TinderCards.css\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport axios from \"./axios\";\r\n\r\nfunction TinderCards() {\r\n  const [lastDirection, setLastDirection] = useState(\"\");\r\n  const [people, setPeople] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const req = await axios.get(\"/tinder/cards\");\r\n      setPeople(req.data);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(people);\r\n\r\n  const swiped = (direction, nameToDelete) => {\r\n    console.log(\"Removing \" + nameToDelete);\r\n    setLastDirection(direction);\r\n  };\r\n\r\n  const outOfFrame = (name) => {\r\n    console.log(name + \" left the screen!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tinderCards\">\r\n      <div className=\"tinderCards-cardContainer\">\r\n        {people.map((person) => (\r\n          <TinderCard\r\n            className=\"swipe\"\r\n            key={person.name}\r\n            preventSwipe={[\"up\", \"down\"]}\r\n            onSwipe={(dir) => swiped(dir, person.name)}\r\n            onCardLeftScreen={() => outOfFrame(person.name)}\r\n          >\r\n            <div\r\n              style={{ backgroundImage: \"url(\" + person.imgUrl + \")\" }}\r\n              className=\"card\"\r\n            >\r\n              <h3>{person.name}</h3>\r\n            </div>\r\n          </TinderCard>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport TinderCards from \"./TinderCards\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <TinderCards />\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}